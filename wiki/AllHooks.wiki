#hooks

= ci-cms hooks =

In my old cms there are some hooks that can catch events easily. I put it in ci-cms to allow modules acting with them. The hooks work like in [http://codex.wordpress.org/Plugin_API WordPress]. There are two types of hooks: actions and filters. Actions are just a function that will be run at some point, when the hook is rendered. Filters will return the modified parameters.

Some hooks

===Actions===


===Filters===

====member_profile_quick_menu====
This should return an array to show a quick menu in the member profile form
{{{
$qm = array("Menu item" => "http://menu.link.com");
}}}

====member_profile_pre_form====
Text to put before all the fields for profile

====member_profile_post_form====
Text to put before after the fields for profile

====member_signup_pre_form====

Text to put before the signup form. It is included in form so other fields can be put here.

====member_signup_post_form====

Like members_signup_pre_form but this is under the fields, just about the submit button.

====search_result====

Search result returns an array

{{{
$rows = array('result_link', 'result_title', 'result_type', 'result_date', 'result_text', 'result_order');
}}}

The elements are optionals.

It means in your module, you can hook the "search_result" hook like this.

in your_module_plugin.php
{{{
$this->add_filter('search_result', 'your_module_search_result');
	
function your_module_search_result($rows)
{
    //modify rows here
    return $rows;
}
}}}